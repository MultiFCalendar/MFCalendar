/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mfcal;

import com.sun.glass.events.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Wade
 */
public class Fiffra extends javax.swing.JFrame {

    /**
     * Creates new form Fiffra
     */
    public Fiffra(int day, int month, int year, int hour) throws IOException {
        initComponents();
        this.day = day;
        this.month = month;
        this.year = year;
        this.hour = hour;
        jLabel1.setText(day + "/" + month + "/" + year + " Hour :" + hour);

        FileReader fileReader = new FileReader(new File("acDats.txt"));

        BufferedReader br = new BufferedReader(fileReader);

        String line = null;
        br.readLine();

        while ((line = br.readLine()) != null) // reading lines until the end of the file
        {

            String[] splitStr = MFCal.decode(line).split("é");
            if (splitStr[0].equals(jLabel1.getText())) {
                String[] secSplit = splitStr[1].split("#");
                jTextField1.setText(secSplit[0]);
                jTextField2.setText(secSplit[1]);
                jTextField1.setEditable(false);
                jTextField2.setEditable(false);
                jButton1.setVisible(false);
            }
        }

        br.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(640, 480));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("23 Ekim 2016");

        jPanel1.setBackground(new java.awt.Color(203, 203, 255));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jLabel2.setText("File :");

        jLabel3.setText("Link :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setLabel("Cancel Sending");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(74, 74, 74)
                        .addComponent(jButton2)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Thfra x = null;
        try {
            x = new Thfra(this.day, this.month, this.year);
        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }
        x.setLocation(this.getLocation());
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String firTex = this.day + "/" + this.month + "/" + this.year + " Hour :" + this.hour + "é";

        String file = jTextField1.getText();
        String link = jTextField2.getText();

        if (file.length() == 0 || link.length() == 0) {
            return;
        }
        int counter = 0;
        int counter2 = 0;
        for (int i = 0; i < file.length(); ++i) {
            if (file.charAt(i) == ' ' || file.charAt(i) == '\t') {
                ++counter;
            }
        }
        for (int j = 0; j < link.length(); ++j) {
            if (link.charAt(j) == ' ' || link.charAt(j) == '\t') {
                ++counter2;
            }
        }
        if (counter == file.length() || counter2 == link.length()) {
            return;
        }

        firTex += file;

        firTex += "#";

        firTex += link;

        String willSend = new String();

        FileWriter fileWriter = null;

        willSend += MFCal.encode(firTex) + "\r\n";

        try {
            fileWriter = new FileWriter("acDats.txt", true);
        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bufferWritter = new BufferedWriter(fileWriter);
        try {
            bufferWritter.append(willSend);

        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            bufferWritter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }

        Thfra x = null;
        try {
            x = new Thfra(day, month, year);
        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }
        x.setLocation(this.getLocation());
        x.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String firTex = this.day + "/" + this.month + "/" + this.year + " Hour :" + this.hour + "é";
        ArrayList<String> b = new ArrayList<String>();

        String file = jTextField1.getText();
        String link = jTextField2.getText();

        firTex += file;

        firTex += "#";

        firTex += link;

        b.add(MFCal.encode(firTex));

        try {
            MFCal.deleteFromFiles("acDats.txt", b);
        } catch (IOException ex) {
            Logger.getLogger(Fiffra.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField1.setText("");
        jTextField2.setText("");

        Thfra x = null;
        try {
            x = new Thfra(day, month, year);
        } catch (IOException ex) {
            Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
        }
        x.setLocation(this.getLocation());
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String firTex = this.day + "/" + this.month + "/" + this.year + " Hour :" + this.hour + "é";

            String file = jTextField1.getText();
            String link = jTextField2.getText();

            if (file.length() == 0 || link.length() == 0) {
                return;
            }
            int counter = 0;
            int counter2 = 0;
            for (int i = 0; i < file.length(); ++i) {
                if (file.charAt(i) == ' ' || file.charAt(i) == '\t') {
                    ++counter;
                }
            }
            for (int j = 0; j < link.length(); ++j) {
                if (link.charAt(j) == ' ' || link.charAt(j) == '\t') {
                    ++counter2;
                }
            }
            if (counter == file.length() || counter2 == link.length()) {
                return;
            }

            firTex += file;

            firTex += "#";

            firTex += link;

            String willSend = new String();

            FileWriter fileWriter = null;

            willSend += MFCal.encode(firTex) + "\r\n";

            try {
                fileWriter = new FileWriter("acDats.txt", true);
            } catch (IOException ex) {
                Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedWriter bufferWritter = new BufferedWriter(fileWriter);
            try {
                bufferWritter.append(willSend);

            } catch (IOException ex) {
                Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                bufferWritter.close();
            } catch (IOException ex) {
                Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
            }

            Thfra x = null;
            try {
                x = new Thfra(day, month, year);
            } catch (IOException ex) {
                Logger.getLogger(Fourfra.class.getName()).log(Level.SEVERE, null, ex);
            }
            x.setLocation(this.getLocation());
            x.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    private int day;
    private int month;
    private int year;
    private int hour;

}
